clear all  
close all
format long
%Finite element method discrete Richards equation
% IHHS algorithm for solving linear equations

%Physical parameters of soil
Ks=1*10^-4;
seta_s=0.35;
seta_r=0.14;
a=3.2*10^-4;
h_d=-100000;
XX=exp(a*h_d);

%Discrete process
Dy=0.4;Dx=0.2;
Lz=10;Lx=1;
n2=1/Dx+1;
n3=Lz/Dy+1;
nn=n3*n2;
Dt=0.02;
m=5/Dt;
z=linspace(10,0,n3);
c=a*(seta_s-seta_r)/Ks;
G=zeros(nn,nn);P=zeros(nn,nn);U=zeros(nn,nn);
X=zeros(nn,1);Y=zeros(nn,1);h_o=zeros(nn,m+1);
NX=zeros(4,1);NY=zeros(4,1);NS=zeros(4,1);NODE=zeros(4,1);
XSI=[-0.57735,0.57735,0.57735,-0.57735];ETA=[-0.57735,-0.57735,0.57735,0.57735];
 
%Initial condition + boundary condition
  for j=1:m+1
      for i=1:n2
      h_o(1+(i-1)*n3,j)=1-XX;
      h_o(n3+(i-1)*n3,j)=0;
      end
  end

%Coordinate set
 for j=1:n2
  for i=1:n3
    X(i+(j-1)*n3)=(j-1)*Dx;
    Y(i+(j-1)*n3)=Lz-(i-1)*Dy;
  end
 end
 

%Generate conduction and storage matrices
for mm=1:5
 for i=1:n3-1
    I=i+1+(mm-1)*n3;
    J=I+n3;
    M=J-1;
    N=I-1;
    NODE(1)=I;
    NODE(2)=J;
    NODE(3)=M;
    NODE(4)=N;
    AA=abs(X(J)-X(I))/2;
    BB=abs(Y(N)-Y(I))/2;
    for j=1:4
       L=NODE(j);
       for k=1:4
           NS(1)=0.25*(1-XSI(k))*(1-ETA(k));
           NS(2)=0.25*(1+XSI(k))*(1-ETA(k));
           NS(3)=0.25*(1+XSI(k))*(1+ETA(k));
           NS(4)=0.25*(1-XSI(k))*(1+ETA(k));
           NX(1)=-0.25*(1-ETA(k))/AA;
           NX(2)=0.25*(1-ETA(k))/AA;
           NX(3)=0.25*(1+ETA(k))/AA;
           NX(4)=-0.25*(1+ETA(k))/AA;
           NY(1)=-0.25*(1-XSI(k))/BB;
           NY(2)=-0.25*(1+XSI(k))/BB;
           NY(3)=0.25*(1+XSI(k))/BB;
           NY(4)=0.25*(1-XSI(k))/BB;
           G(L,I)=G(L,I)+(NX(1)*NX(j)+NY(1)*NY(j))*AA*BB;
           G(L,J)=G(L,J)+(NX(2)*NX(j)+NY(2)*NY(j))*AA*BB;
           G(L,M)=G(L,M)+(NX(3)*NX(j)+NY(3)*NY(j))*AA*BB;
           G(L,N)=G(L,N)+(NX(4)*NX(j)+NY(4)*NY(j))*AA*BB;
           P(L,I)=P(L,I)+NS(1)*NS(j)*AA*BB*c;
           P(L,J)=P(L,J)+NS(2)*NS(j)*AA*BB*c;
           P(L,M)=P(L,M)+NS(3)*NS(j)*AA*BB*c;
           P(L,N)=P(L,N)+NS(4)*NS(j)*AA*BB*c;
           U(L,I)=U(L,I)-NY(1)*NS(j)*AA*BB*a;
           U(L,J)=U(L,J)-NY(2)*NS(j)*AA*BB*a;
           U(L,M)=U(L,M)-NY(3)*NS(j)*AA*BB*a;
           U(L,N)=U(L,N)-NY(4)*NS(j)*AA*BB*a;
       end
    end
 end
end

A1=(G+U)/2;
A=(A1+P/Dt);
Ax=(-A1+P/Dt);
for i=1:n2
    A(n3*(i-1)+1,:)=0; A(n3*(i-1)+1,n3*(i-1)+1)=1;
    A(n3*i,:)=0; A(n3*i,n3*i)=1;
end
cond(A)
Ix=eye(nn);H=1/2*(A+A');S=1/2*(A-A');
He=eig(H);
lamax=max(He);lamin=min(He);

Bz=zeros(nn,1);
kk=zeros(1,m+1);
aa=sqrt(lamax*lamin);
iD=aa*Ix+H;B1=aa*Ix-S;
iD2=aa*Ix+S;B2=aa*Ix-H;

%IHSS Iterative Method for Solving Linear Equations
ERR=zeros(60,m+1);
wucha1=1*10^-8;max_it=500;tol=1*10^-10;
t0=cputime;
for NSTEP=2:m+1  %Ê±²ãÊý
     max1=10;kx=0;
     Bz=Ax*h_o(:,NSTEP-1);
      for i=1:n2
          Bz(1+(i-1)*n3)=1-XX;Bz(n3*i)=0;
      end

 while max1>wucha1  
     for i=1:n3
        h_o(i,NSTEP)=h_o(i+2*n3,NSTEP); 
        h_o(i+(n2-1)*n3,NSTEP)=h_o(i+(n2-3)*n3,NSTEP); 
     end
     OLDVAL=h_o(:,NSTEP);
     r=Bz+B1*h_o(:,NSTEP);
     [x,iter,time,res,resvec]=CGM(iD,r,h_o(:,NSTEP),max_it,tol);%Conjugate gradient method for solving equations
      for j=1:n2
         for i=2:n3-1
          h_o(i+(j-1)*n3,NSTEP)=x(i+(j-1)*n3); 
         end
     end
  
     r2=Bz+B2*h_o(:,NSTEP);
     [x2,k1,res1,resvec1]=GMRES(iD2,r2,h_o(:,NSTEP),max_it,tol);%GMRES for solving equations
     for j=1:n2
         for i=2:n3-1
          h_o(i+(j-1)*n3,NSTEP)=x2(i+(j-1)*n3); 
         end
     end
    
     kx=kx+1;
     %rx=Bz-A*h_o(:,NSTEP);
     %ERR(kx,NSTEP)=norm(rx);
     ERR(kx,NSTEP)=norm(OLDVAL-h_o(:,NSTEP),inf);
     if ERR(kx,NSTEP)<max1
        max1=ERR(kx,NSTEP);
     end
     kk(1,NSTEP)=kk(1,NSTEP)+1;   
  end
end
t1=cputime-t0;
xx1=real(log(h_o+XX)/a);

%Analytical solutions
L=10;
lamu_k=zeros(1,21);mu_k=zeros(1,21);
%bta=sqrt(a_g*a_g/4+(pi/a_g)^2);
for i=1:21
    lamu_k(i)=pi*i/L;
    mu_k(i)=(a^2/4+lamu_k(i)^2)/(a*(seta_s-seta_r)/Ks);
end
t=[1,2,3,4,5];n1=length(t);
sum=zeros(n3,n1);
hz_t=zeros(n3,n1);hz_t1=zeros(n3,n1);
for i=1:n3
    for j=1:n1
        for k=1:21
         sum(i,j)=sum(i,j)+(-1)^k*(lamu_k(k)/mu_k(k))*sin(lamu_k(k)*z(i))*exp(-1*mu_k(k)*t(j));
        end
    end
end

for i=1:n3
    for j=1:n1
        hz_t(i,j)=2*(1-XX)/(L*a*(seta_s-seta_r)/Ks)*exp(a*(L-z(i))/2)*sum(i,j)+(1-XX)*(1-exp(-a*z(i)))/(1-exp(-a*L));
    end
end

for i=1:n3
    for j=1:n1
        hz_t1(i,j)=log(hz_t(i,j)+XX)/a;
    end
end

real=zeros(n3,n1);
sum2=0;
for j=1:n1
    for i=1:n3
        real(i,j)=hz_t(i,j)-h_o(i,1+m/5*j);
         sum2=sum2+real(i,j)^2;
    end
end
sum1=0;
for i=1:n3
    sum1=sum1+real(i,5)^2;
end

%Calculate RMSE
max4=sqrt(sum1/n3);

%plotting
set(0,'defaultfigurecolor','w');
figure(1)
plot(xx1(1+n3*3:n3+n3*3,m/5+1),z,'*',xx1(1+n3*3:n3+n3*3,m/5*2+1),z,'*',xx1(1+n3*3:n3+n3*3,m/5*3+1),z,'*',xx1(1+n3*3:n3+n3*3,m/5*4+1),z,'*',xx1(1+n3*3:n3+n3*3,m/5*5+1),z,'*','Linewidth',1.5);
hold on;
plot(hz_t1(:,1),z,hz_t1(:,2),z,hz_t1(:,3),z,hz_t1(:,4),z,hz_t1(:,5),z,'Linewidth',1.5);
xlabel('Pressure head (m)','FontSize',16);
ylabel('Depth (m)','FontSize',16);
legend('t=2hr','t=4hr','t=6hr','t=8hr','t=10hr');
figure(2)
plot(real(:,1),z,real(:,2),z,real(:,3),z,real(:,4),z,real(:,5),z,'Linewidth',1.5);
xlabel('Absolute error','FontSize',16);
ylabel('Depth (m)','FontSize',16);
legend('t=2hr','t=4hr','t=6hr','t=8hr','t=10hr');
